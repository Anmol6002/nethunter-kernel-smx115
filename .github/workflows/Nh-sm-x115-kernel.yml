name: Build Kali NetHunter Kernel for SM-X115

on:
  workflow_dispatch:

jobs:
  build:
    name: Compile Kernel & Create Magisk Flashable ZIP
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Clone Kernel Source
      uses: actions/checkout@v4
      with:
        repository: Anmol6002/kernel_source_sm-x115
        ref: main
        path: kernel

    - name: 🧰 Install Build Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y bc bison flex libssl-dev libncurses5-dev \
          libelf-dev build-essential git wget cpio rsync zip unzip python3

    - name: 🔧 Clone AOSP GCC Toolchain
      run: |
        git clone --depth=1 https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 \
          -b android10-release toolchain64
        echo "CROSS_COMPILE=$(pwd)/toolchain64/bin/aarch64-linux-android-" >> $GITHUB_ENV

    - name: 🩹 Patch defconfig with NetHunter configs
      working-directory: kernel
      run: |
        DEFCONFIG="arch/arm64/configs/gta9_defconfig"
        echo -e "\n# --- NetHunter Config Patches ---" >> $DEFCONFIG
        curl -sSL https://raw.githubusercontent.com/Anmol6002/nethunter-kernel-smx115/main/gta9_defconfig_patched.config >> $DEFCONFIG
        echo -e "# --- End Patch ---\n" >> $DEFCONFIG

    - name: 🛠️ Compile Kernel & Modules
      working-directory: kernel
      run: |
        export ARCH=arm64
        export SUBARCH=arm64
        export CROSS_COMPILE=${{ env.CROSS_COMPILE }}

        # 🧪 Disable ABI Check (add this line)
        echo "KCFLAGS=-DIGNORE_ABI_CHECKS" >> $GITHUB_ENV

        make gta9_defconfig
        make -j$(nproc) KCFLAGS="$KCFLAGS"
        make modules -j$(nproc) KCFLAGS="$KCFLAGS"
        mkdir -p ../out/modules_install
        make INSTALL_MOD_PATH=../out/modules_install modules_install KCFLAGS="$KCFLAGS"

    - name: 📦 Pack modules.tar.gz
      run: |
        cd out/modules_install
        tar -czf ../../modules.tar.gz lib

    - name: 📁 Clone AnyKernel3 & Setup
      run: |
        git clone --depth=1 https://github.com/osm0sis/AnyKernel3.git anykernel
        cp kernel/arch/arm64/boot/Image.gz anykernel/
        if [ -d kernel/arch/arm64/boot/dts ]; then
          find kernel/arch/arm64/boot/dts -name "*.dtb" -exec cat {} + > anykernel/dtb
          cat anykernel/Image.gz anykernel/dtb > anykernel/Image.gz-dtb
        else
          cp anykernel/Image.gz anykernel/Image.gz-dtb
        fi
        mkdir -p anykernel/lib/modules
        tar -xzf modules.tar.gz -C anykernel/
        sed -i 's/is_slot_device=0/is_slot_device=1/' anykernel/anykernel.sh
        sed -i 's@kernel_string=.*@kernel_string="NetHunter Kernel for SM-X115"@' anykernel/anykernel.sh

        # ➕ Enable init.d support
        sed -i 's/skip_initramfs=0/skip_initramfs=1/' anykernel/anykernel.sh
        echo "Init.d support enabled"

    - name: 📦 Create Magisk Flashable ZIP
      run: |
        cd anykernel
        zip -r9 ../NetHunter-Kernel-SMX115.zip ./*

    - name: 📤 Upload ZIP to Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: NetHunter-Kernel-SMX115
        path: NetHunter-Kernel-SMX115.zip

    - name: 🚀 OPTIONAL:Push to GitHub Releases
      if: ${{ false }}  # ❗ Change to true to enable
      uses: softprops/action-gh-release@v1
      with:
        tag_name: nethunter-smx115-latest
        name: NetHunter Kernel SM-X115
        files: NetHunter-Kernel-SMX115.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
